{
  "version": 3,
  "sources": ["../../node_modules/image-tools/index.js"],
  "sourcesContent": ["function getLocalFilePath(path) {\n    if (path.indexOf('_www') === 0 || path.indexOf('_doc') === 0 || path.indexOf('_documents') === 0 || path.indexOf('_downloads') === 0) {\n        return path\n    }\n    if (path.indexOf('file://') === 0) {\n        return path\n    }\n    if (path.indexOf('/storage/emulated/0/') === 0) {\n        return path\n    }\n    if (path.indexOf('/') === 0) {\n        var localFilePath = plus.io.convertAbsoluteFileSystem(path)\n        if (localFilePath !== path) {\n            return localFilePath\n        } else {\n            path = path.substr(1)\n        }\n    }\n    return '_www/' + path\n}\n\nfunction dataUrlToBase64(str) {\n    var array = str.split(',')\n    return array[array.length - 1]\n}\n\nvar index = 0\nfunction getNewFileId() {\n    return Date.now() + String(index++)\n}\n\nfunction biggerThan(v1, v2) {\n    var v1Array = v1.split('.')\n    var v2Array = v2.split('.')\n    var update = false\n    for (var index = 0; index < v2Array.length; index++) {\n        var diff = v1Array[index] - v2Array[index]\n        if (diff !== 0) {\n            update = diff > 0\n            break\n        }\n    }\n    return update\n}\n\nexport function pathToBase64(path) {\n    return new Promise(function(resolve, reject) {\n        if (typeof window === 'object' && 'document' in window) {\n            if (typeof FileReader === 'function') {\n                var xhr = new XMLHttpRequest()\n                xhr.open('GET', path, true)\n                xhr.responseType = 'blob'\n                xhr.onload = function() {\n                    if (this.status === 200) {\n                        let fileReader = new FileReader()\n                        fileReader.onload = function(e) {\n                            resolve(e.target.result)\n                        }\n                        fileReader.onerror = reject\n                        fileReader.readAsDataURL(this.response)\n                    }\n                }\n                xhr.onerror = reject\n                xhr.send()\n                return\n            }\n            var canvas = document.createElement('canvas')\n            var c2x = canvas.getContext('2d')\n            var img = new Image\n            img.onload = function() {\n                canvas.width = img.width\n                canvas.height = img.height\n                c2x.drawImage(img, 0, 0)\n                resolve(canvas.toDataURL())\n                canvas.height = canvas.width = 0\n            }\n            img.onerror = reject\n            img.src = path\n            return\n        }\n        if (typeof plus === 'object') {\n            plus.io.resolveLocalFileSystemURL(getLocalFilePath(path), function(entry) {\n                entry.file(function(file) {\n                    var fileReader = new plus.io.FileReader()\n                    fileReader.onload = function(data) {\n                        resolve(data.target.result)\n                    }\n                    fileReader.onerror = function(error) {\n                        reject(error)\n                    }\n                    fileReader.readAsDataURL(file)\n                }, function(error) {\n                    reject(error)\n                })\n            }, function(error) {\n                reject(error)\n            })\n            return\n        }\n        if (typeof wx === 'object' && wx.canIUse('getFileSystemManager')) {\n            wx.getFileSystemManager().readFile({\n                filePath: path,\n                encoding: 'base64',\n                success: function(res) {\n                    resolve('data:image/png;base64,' + res.data)\n                },\n                fail: function(error) {\n                    reject(error)\n                }\n            })\n            return\n        }\n        reject(new Error('not support'))\n    })\n}\n\nexport function base64ToPath(base64) {\n    return new Promise(function(resolve, reject) {\n        if (typeof window === 'object' && 'document' in window) {\n            base64 = base64.split(',')\n            var type = base64[0].match(/:(.*?);/)[1]\n            var str = atob(base64[1])\n            var n = str.length\n            var array = new Uint8Array(n)\n            while (n--) {\n                array[n] = str.charCodeAt(n)\n            }\n            return resolve((window.URL || window.webkitURL).createObjectURL(new Blob([array], { type: type })))\n        }\n        var extName = base64.split(',')[0].match(/data\\:\\S+\\/(\\S+);/)\n        if (extName) {\n            extName = extName[1]\n        } else {\n            reject(new Error('base64 error'))\n        }\n        var fileName = getNewFileId() + '.' + extName\n        if (typeof plus === 'object') {\n            var basePath = '_doc'\n            var dirPath = 'uniapp_temp'\n            var filePath = basePath + '/' + dirPath + '/' + fileName\n            if (!biggerThan(plus.os.name === 'Android' ? '1.9.9.80627' : '1.9.9.80472', plus.runtime.innerVersion)) {\n                plus.io.resolveLocalFileSystemURL(basePath, function(entry) {\n                    entry.getDirectory(dirPath, {\n                        create: true,\n                        exclusive: false,\n                    }, function(entry) {\n                        entry.getFile(fileName, {\n                            create: true,\n                            exclusive: false,\n                        }, function(entry) {\n                            entry.createWriter(function(writer) {\n                                writer.onwrite = function() {\n                                    resolve(filePath)\n                                }\n                                writer.onerror = reject\n                                writer.seek(0)\n                                writer.writeAsBinary(dataUrlToBase64(base64))\n                            }, reject)\n                        }, reject)\n                    }, reject)\n                }, reject)\n                return\n            }\n            var bitmap = new plus.nativeObj.Bitmap(fileName)\n            bitmap.loadBase64Data(base64, function() {\n                bitmap.save(filePath, {}, function() {\n                    bitmap.clear()\n                    resolve(filePath)\n                }, function(error) {\n                    bitmap.clear()\n                    reject(error)\n                })\n            }, function(error) {\n                bitmap.clear()\n                reject(error)\n            })\n            return\n        }\n        if (typeof wx === 'object' && wx.canIUse('getFileSystemManager')) {\n            var filePath = wx.env.USER_DATA_PATH + '/' + fileName\n            wx.getFileSystemManager().writeFile({\n                filePath: filePath,\n                data: dataUrlToBase64(base64),\n                encoding: 'base64',\n                success: function() {\n                    resolve(filePath)\n                },\n                fail: function(error) {\n                    reject(error)\n                }\n            })\n            return\n        }\n        reject(new Error('not support'))\n    })\n}"],
  "mappings": "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",
  "names": ["index", "entry"]
}
